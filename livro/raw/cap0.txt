$h1 Programe agora mesmo

$h3 O que é Python?

$p Python é uma linguagem de programação clara e versátil. Existem milhares de pacotes projetados para uma ampla gama de atividades.

$p Sendo uma linguagem interpretada, um trecho de código pode ser executado imediatamente, sem que o programador tenha que interromper seu trabalho.

$h3 Como usar a interface desta página

$p Para interagir com o interpretador e editor, é recomendado usar um ambiente de desktop. A interface foi testada com Google Chrome (versão 121).

$p Poucos testes com smartphones foram feitos. Não há garantia que a experiência com um smartphone seja adequada.

$p Na parte inferior da página está o interpretador interativo de Python. Os três sinais de "maior que" <code> >>> </code> indicam que o interpretador está pronto para receber seu código.

$p Experimente clicar no interpretador, e digite <code>1 + 2</code>. Para pedir que o interpretador avalie (isto é, produza um valor para) esta expressão, tecle <code>Enter</code> (também chamado de <code>Return</code>).

$p Você verá o resultado, <code>3</code>, numa nova linha.

$p No conteúdo deste livro, haverão blocos editáveis de código, que terão esta aparência:

@py
maçãs = 10
bananas = 15

print(maçãs + bananas)
@endpy

$p Clique dentro dessa caixa para ativar o cursor. Com o cursor dentro do editor, segure <code>Shift</code> e tecle <code>Enter</code> (também chamado de <code>Return</code>) para enviar este código ao interpretador. Esta combinação é frequentemente escrita <code>Shift + Enter</code>.

$p Se preferir, clicando no botão amarelo <strong>Avalie</strong> terá o mesmo efeito.

$p Para pular imediatamente ao interpretador após avaliar o código, tecle <code>Ctrl + Enter</code>.

$p Não se preocupe muito em entender a sintaxe (regras de como escrever código) desse trecho agora. Explicarei logo no próximo capítulo.

$p Os blocos contém código independentes, mas uma vez enviada ao interpretador, as definições anteriores permanecerão lá. (Observe que reutilizei a variável <code>bananas</code> do primeiro bloco. Se esse segundo bloco for avaliado antes, o interpretador sinalizará um erro que <code>bananas</code> não foi definido).

@py
jabuticabas = 100

print(bananas + jabuticabas)
@endpy

$p Você poderá fazer alterações no código, e quando terminar, avalie o código como foi descrito acima para que o interpretador receba o código novo.

$h3 Capítulo zero?

$p Em Python, a contagem de ítens de listas e outras sequências começa com <code>0</code>, e não <code>1</code>. Não vou justificar nenhum dos dois lados, mas se quiser entender o ponto de vista de alguém experiente, indico um artigo do cientista da computação Edsger Dijkstra chamado <em><a href="https://www.google.com/search?q=dijkstra+why+numbering+should+start+at+zero" target="_blank">Why numbering should start at zero (encontre no Google)</a></em>.
